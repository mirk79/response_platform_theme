# Bildbreitenberechnung ...
// lib.ceImageWidthCalc = 692
lib.ceImageWidthCalc = COA_INT
lib.ceImageWidthCalc {
    10 = TEXT
    10.value = {$styles.content.textmedia.maxW} / 2.6
    20 = TEXT
    20.value = +3
    stdWrap.prioriCalc = intval
}
// lib.ceImageWidthCalc.value = {$styles.content.textmedia.maxW} / 2.6
// lib.ceImageWidthCalc.prioriCalc = intval

tt_content.textpic =< lib.contentElementWithHeader
tt_content.textpic {
    fields {
        content {
            fields {
                bodytext = TEXT
                bodytext {
                    field = bodytext
                    parseFunc =< lib.parseFunc_links
                }
                widthtest < lib.ceImageWidthCalc
                gallery >
                gallery = TEXT
                gallery {
                    dataProcessing {
                        // 10 = FriendsOfTYPO3\Headless\DataProcessing\FilesProcessor
                        10 = Response\ResponsePlatformTheme\DataProcessing\FilesProcessor
                        10 {
                            references.fieldName = image
                            as = files
                            processingConfiguration {
                                // width = 300
                                // height = 300
                                // minWidth = 200
                                // minHeight = 200
                                maxWidth < lib.ceImageWidthCalc
                                // maxWidth = TEXT
                                // maxWidth.value = 1800 + 2
                                // maxWidth.prioriCalc = intval
                                // maxHeight = 600
                            }
                        }
                        // 20 = FriendsOfTYPO3\Headless\DataProcessing\GalleryProcessor
                        // 20 {
                        //     maxGalleryWidth = {$styles.content.textmedia.maxW}
                        //     maxGalleryWidthInText = {$styles.content.textmedia.maxWInText}
                        //     columnSpacing = {$styles.content.textmedia.columnSpacing}
                        //     borderWidth = {$styles.content.textmedia.borderWidth}
                        //     borderPadding = {$styles.content.textmedia.borderPadding}
                        //     as = gallery
                        // }
                    }
                }
            }
        }
    }
}
